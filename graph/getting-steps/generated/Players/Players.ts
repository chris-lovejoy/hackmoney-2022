// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StepsAdded extends ethereum.Event {
  get params(): StepsAdded__Params {
    return new StepsAdded__Params(this);
  }
}

export class StepsAdded__Params {
  _event: StepsAdded;

  constructor(event: StepsAdded) {
    this._event = event;
  }

  get stepsTaken(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get player(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TreasuryFunded extends ethereum.Event {
  get params(): TreasuryFunded__Params {
    return new TreasuryFunded__Params(this);
  }
}

export class TreasuryFunded__Params {
  _event: TreasuryFunded;

  constructor(event: TreasuryFunded) {
    this._event = event;
  }

  get amountFunded(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Players__determineStartingPositionResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getX(): BigInt {
    return this.value0;
  }

  getY(): BigInt {
    return this.value1;
  }
}

export class Players__playersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getPlayerId(): BigInt {
    return this.value0;
  }

  getTimeJoined(): BigInt {
    return this.value1;
  }

  getLastQueried(): BigInt {
    return this.value2;
  }

  getStepsAvailable(): BigInt {
    return this.value3;
  }

  getTotalStepsTaken(): BigInt {
    return this.value4;
  }

  getAmountEarned(): BigInt {
    return this.value5;
  }
}

export class Players extends ethereum.SmartContract {
  static bind(address: Address): Players {
    return new Players("Players", address);
  }

  NFTPRICE(): BigInt {
    let result = super.call("NFTPRICE", "NFTPRICE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_NFTPRICE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NFTPRICE", "NFTPRICE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkContractBalance(): BigInt {
    let result = super.call(
      "checkContractBalance",
      "checkContractBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_checkContractBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkContractBalance",
      "checkContractBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  determineStartingPosition(): Players__determineStartingPositionResult {
    let result = super.call(
      "determineStartingPosition",
      "determineStartingPosition():(uint256,uint256)",
      []
    );

    return new Players__determineStartingPositionResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_determineStartingPosition(): ethereum.CallResult<
    Players__determineStartingPositionResult
  > {
    let result = super.tryCall(
      "determineStartingPosition",
      "determineStartingPosition():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Players__determineStartingPositionResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  indexStartingPosition(): BigInt {
    let result = super.call(
      "indexStartingPosition",
      "indexStartingPosition():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_indexStartingPosition(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "indexStartingPosition",
      "indexStartingPosition():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  players(param0: Address): Players__playersResult {
    let result = super.call(
      "players",
      "players(address):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Players__playersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_players(param0: Address): ethereum.CallResult<Players__playersResult> {
    let result = super.tryCall(
      "players",
      "players(address):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Players__playersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DetermineStartingPositionCall extends ethereum.Call {
  get inputs(): DetermineStartingPositionCall__Inputs {
    return new DetermineStartingPositionCall__Inputs(this);
  }

  get outputs(): DetermineStartingPositionCall__Outputs {
    return new DetermineStartingPositionCall__Outputs(this);
  }
}

export class DetermineStartingPositionCall__Inputs {
  _call: DetermineStartingPositionCall;

  constructor(call: DetermineStartingPositionCall) {
    this._call = call;
  }
}

export class DetermineStartingPositionCall__Outputs {
  _call: DetermineStartingPositionCall;

  constructor(call: DetermineStartingPositionCall) {
    this._call = call;
  }

  get x(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get y(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class FundTreasuryCall extends ethereum.Call {
  get inputs(): FundTreasuryCall__Inputs {
    return new FundTreasuryCall__Inputs(this);
  }

  get outputs(): FundTreasuryCall__Outputs {
    return new FundTreasuryCall__Outputs(this);
  }
}

export class FundTreasuryCall__Inputs {
  _call: FundTreasuryCall;

  constructor(call: FundTreasuryCall) {
    this._call = call;
  }
}

export class FundTreasuryCall__Outputs {
  _call: FundTreasuryCall;

  constructor(call: FundTreasuryCall) {
    this._call = call;
  }
}

export class MoveShipCall extends ethereum.Call {
  get inputs(): MoveShipCall__Inputs {
    return new MoveShipCall__Inputs(this);
  }

  get outputs(): MoveShipCall__Outputs {
    return new MoveShipCall__Outputs(this);
  }
}

export class MoveShipCall__Inputs {
  _call: MoveShipCall;

  constructor(call: MoveShipCall) {
    this._call = call;
  }

  get x(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get y(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _planetId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _shipId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _worldId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class MoveShipCall__Outputs {
  _call: MoveShipCall;

  constructor(call: MoveShipCall) {
    this._call = call;
  }
}

export class RegisterProfileCall extends ethereum.Call {
  get inputs(): RegisterProfileCall__Inputs {
    return new RegisterProfileCall__Inputs(this);
  }

  get outputs(): RegisterProfileCall__Outputs {
    return new RegisterProfileCall__Outputs(this);
  }
}

export class RegisterProfileCall__Inputs {
  _call: RegisterProfileCall;

  constructor(call: RegisterProfileCall) {
    this._call = call;
  }

  get _tokenURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterProfileCall__Outputs {
  _call: RegisterProfileCall;

  constructor(call: RegisterProfileCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetNftAddressCall extends ethereum.Call {
  get inputs(): SetNftAddressCall__Inputs {
    return new SetNftAddressCall__Inputs(this);
  }

  get outputs(): SetNftAddressCall__Outputs {
    return new SetNftAddressCall__Outputs(this);
  }
}

export class SetNftAddressCall__Inputs {
  _call: SetNftAddressCall;

  constructor(call: SetNftAddressCall) {
    this._call = call;
  }

  get _nftContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNftAddressCall__Outputs {
  _call: SetNftAddressCall;

  constructor(call: SetNftAddressCall) {
    this._call = call;
  }
}

export class SetWorldAddressCall extends ethereum.Call {
  get inputs(): SetWorldAddressCall__Inputs {
    return new SetWorldAddressCall__Inputs(this);
  }

  get outputs(): SetWorldAddressCall__Outputs {
    return new SetWorldAddressCall__Outputs(this);
  }
}

export class SetWorldAddressCall__Inputs {
  _call: SetWorldAddressCall;

  constructor(call: SetWorldAddressCall) {
    this._call = call;
  }

  get _worldAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWorldAddressCall__Outputs {
  _call: SetWorldAddressCall;

  constructor(call: SetWorldAddressCall) {
    this._call = call;
  }
}

export class SyncStepsCall extends ethereum.Call {
  get inputs(): SyncStepsCall__Inputs {
    return new SyncStepsCall__Inputs(this);
  }

  get outputs(): SyncStepsCall__Outputs {
    return new SyncStepsCall__Outputs(this);
  }
}

export class SyncStepsCall__Inputs {
  _call: SyncStepsCall;

  constructor(call: SyncStepsCall) {
    this._call = call;
  }

  get steps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SyncStepsCall__Outputs {
  _call: SyncStepsCall;

  constructor(call: SyncStepsCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
