/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Players, PlayersInterface } from "../../contracts/Players";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "planetType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PlanetConquer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stepsTaken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "StepsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountFunded",
        type: "uint256",
      },
    ],
    name: "TreasuryFunded",
    type: "event",
  },
  {
    inputs: [],
    name: "AAVE_VAULT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BACKEND",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFTPRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WORLD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indexStartingPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_planetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shipId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldId",
        type: "uint256",
      },
    ],
    name: "moveShip",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeJoined",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastQueried",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stepsAvailable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStepsTaken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountEarned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "registerProfile",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAaveVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setBackendAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    name: "setNftAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_worldAddress",
        type: "address",
      },
    ],
    name: "setWorldAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessageBackend",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_steps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastQueried",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "syncSteps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessageBackend",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_message",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastQueried",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "verifySteps",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506129a0806100206000396000f3fe6080604052600436106101145760003560e01c80637912680d116100a0578063ba16971611610064578063ba16971614610332578063e2eb41ff1461035b578063e839665c1461039d578063f2fde38b146103b9578063f6af3431146103e257610114565b80637912680d146102715780637c0b8de21461029a5780638129fc1c146102c55780638da5cb5b146102dc578063b93d28ee1461030757610114565b8063240bcbfa116100e7578063240bcbfa146101bf57806339e7a708146101e85780633b72498a146102135780633fc909201461023e578063715018a61461025a57610114565b80630b102d1a146101195780631815ce7d146101425780631822b8471461016b5780631ee93ff014610194575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611b6e565b61040d565b005b34801561014e57600080fd5b5061016960048036038101906101649190611b6e565b6104cd565b005b34801561017757600080fd5b50610192600480360381019061018d9190611b97565b61058d565b005b3480156101a057600080fd5b506101a9610752565b6040516101b69190611fea565b60405180910390f35b3480156101cb57600080fd5b506101e660048036038101906101e19190611b97565b610778565b005b3480156101f457600080fd5b506101fd6108da565b60405161020a9190611fea565b60405180910390f35b34801561021f57600080fd5b50610228610900565b604051610235919061222c565b60405180910390f35b61025860048036038101906102539190611c20565b61090c565b005b34801561026657600080fd5b5061026f610b3b565b005b34801561027d57600080fd5b5061029860048036038101906102939190611b6e565b610bc3565b005b3480156102a657600080fd5b506102af610c83565b6040516102bc9190611fea565b60405180910390f35b3480156102d157600080fd5b506102da610ca9565b005b3480156102e857600080fd5b506102f1610d3d565b6040516102fe9190611fea565b60405180910390f35b34801561031357600080fd5b5061031c610d67565b604051610329919061222c565b60405180910390f35b34801561033e57600080fd5b5061035960048036038101906103549190611b6e565b610d72565b005b34801561036757600080fd5b50610382600480360381019061037d9190611b6e565b610e32565b60405161039496959493929190612323565b60405180910390f35b6103b760048036038101906103b29190611cef565b610e6e565b005b3480156103c557600080fd5b506103e060048036038101906103db9190611b6e565b6111d8565b005b3480156103ee57600080fd5b506103f76112d0565b6040516104049190611fea565b60405180910390f35b6104156112f6565b73ffffffffffffffffffffffffffffffffffffffff16610433610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614610489576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610480906121cc565b60405180910390fd5b80606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6104d56112f6565b73ffffffffffffffffffffffffffffffffffffffff166104f3610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614610549576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610540906121cc565b60405180910390fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600085856040516020016105a29291906122c3565b6040516020818303038152906040528051906020012090508681146105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f39061210c565b60405180910390fd5b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000818960405160200161064b929190611fc2565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516106889493929190612035565b6020604051602081039080840390855afa1580156106aa573d6000803e3d6000fd5b505050602060405103519050606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073d906120cc565b60405180910390fd5b50505050505050505050565b606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541415610803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fa906121ec565b60405180910390fd5b80600201548514610849576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610840906121ac565b60405180910390fd5b61085787878787878761058d565b8581600401600082825461086b919061240c565b9250508190555085816003016000828254610886919061240c565b925050819055504281600201819055507fea53fca5456139f39e787af7250a4c0571c46facc363f3083ec3fa7a0d65888e8633426040516108c993929190612247565b60405180910390a150505050505050565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60668060000154905081565b6109146112fe565b662386f26fc10000341461095d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109549061214c565b60405180910390fd5b606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b50505050506000606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0def52133846040518363ffffffff1660e01b8152600401610a3f929190612005565b602060405180830381600087803b158015610a5957600080fd5b505af1158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a919190611c8a565b9050600080610a9e6113e4565b91509150606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4881477843385856040518563ffffffff1660e01b8152600401610b03949392919061227e565b600060405180830381600087803b158015610b1d57600080fd5b505af1158015610b31573d6000803e3d6000fd5b5050505050505050565b610b436112f6565b73ffffffffffffffffffffffffffffffffffffffff16610b61610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614610bb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bae906121cc565b60405180910390fd5b610bc16000611437565b565b610bcb6112f6565b73ffffffffffffffffffffffffffffffffffffffff16610be9610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614610c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c36906121cc565b60405180910390fd5b80606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610cb560016114fd565b90508015610cd9576001600060016101000a81548160ff0219169083151502179055505b610ce16115ed565b8015610d3a5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610d3191906120b1565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b662386f26fc1000081565b610d7a6112f6565b73ffffffffffffffffffffffffffffffffffffffff16610d98610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614610dee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de5906121cc565b60405180910390fd5b80606a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606b6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b600080606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f7b1393856040518263ffffffff1660e01b8152600401610ecc919061222c565b6040805180830381600087803b158015610ee557600080fd5b505af1158015610ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1d9190611cb3565b915091506000610f2d8389611646565b90506000610f3b8389611646565b90506000610f698283610f4e9190612493565b8485610f5a9190612493565b610f64919061240c565b611675565b9050600a81610f789190612493565b606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015411610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff29061212c565b60405180910390fd5b600a816110089190612493565b606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461105991906124ed565b92505081905550606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f488147788338d8d6040518563ffffffff1660e01b81526004016110c1949392919061227e565b600060405180830381600087803b1580156110db57600080fd5b505af11580156110ef573d6000803e3d6000fd5b505050506000606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166334efcb8e8a6040518263ffffffff1660e01b8152600401611150919061222c565b60c06040518083038186803b15801561116857600080fd5b505afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a09190611c61565b905080604001518b1480156111b8575080606001518a145b156111cb576111ca81608001516116ef565b5b5050505050505050505050565b6111e06112f6565b73ffffffffffffffffffffffffffffffffffffffff166111fe610d3d565b73ffffffffffffffffffffffffffffffffffffffff1614611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b906121cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bb906120ec565b60405180910390fd5b6112cd81611437565b50565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137f9061216c565b60405180910390fd5b611392606561194c565b61139c6065611962565b816000018190555042816001018190555061a8c0426113bb91906124ed565b816002018190555060008160030181905550600081600401819055506000816005018190555050565b6000806113f1606661194c565b60006113fd6066611962565b90506000602a8261140e9190612493565b9050600060109050602e83141561142a576114296066611970565b5b8181945094505050509091565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060019054906101000a900460ff16156115745760018260ff1614801561152c575061152a3061197d565b155b61156b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115629061218c565b60405180910390fd5b600090506115e8565b8160ff1660008054906101000a900460ff1660ff16106115c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c09061218c565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff1661163c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116339061220c565b60405180910390fd5b6116446119a0565b565b600081831161166057828261165b91906124ed565b61166d565b818361166c91906124ed565b5b905092915050565b600060038211156116dc57819050600060016002846116949190612462565b61169e919061240c565b90505b818110156116d65780915060028182856116bb9190612462565b6116c5919061240c565b6116cf9190612462565b90506116a1565b506116ea565b600082146116e957600190505b5b919050565b60018114156118f5576000606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663285939846040518163ffffffff1660e01b815260040160206040518083038186803b15801561176257600080fd5b505afa158015611776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179a9190611c8a565b90506000811180156117b05750642e90edd00081115b156118f357606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9336040518263ffffffff1660e01b81526004016118109190611fea565b600060405180830381600087803b15801561182a57600080fd5b505af115801561183e573d6000803e3d6000fd5b5050505080606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254611894919061240c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe43355d49b9fa992e8c84178c0dc4a935d068936a4690cc3262dd36a393fa0de8284426040516118e5939291906122ec565b60405180910390a250611949565b505b3373ffffffffffffffffffffffffffffffffffffffff167fe43355d49b9fa992e8c84178c0dc4a935d068936a4690cc3262dd36a393fa0de600083426040516119409392919061207a565b60405180910390a25b50565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000816000018190555050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166119ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e69061220c565b60405180910390fd5b6119ff6119fa6112f6565b611437565b565b6000611a14611a0f846123a9565b612384565b905082815260208101848484011115611a2c57600080fd5b611a37848285612598565b509392505050565b600081359050611a4e8161290e565b92915050565b600081359050611a6381612925565b92915050565b600082601f830112611a7a57600080fd5b8135611a8a848260208601611a01565b91505092915050565b600060c08284031215611aa557600080fd5b611aaf60c0612384565b90506000611abf84828501611b44565b6000830152506020611ad384828501611b44565b6020830152506040611ae784828501611b44565b6040830152506060611afb84828501611b44565b6060830152506080611b0f84828501611b44565b60808301525060a0611b2384828501611b44565b60a08301525092915050565b600081359050611b3e8161293c565b92915050565b600081519050611b538161293c565b92915050565b600081359050611b6881612953565b92915050565b600060208284031215611b8057600080fd5b6000611b8e84828501611a3f565b91505092915050565b60008060008060008060c08789031215611bb057600080fd5b6000611bbe89828a01611a54565b9650506020611bcf89828a01611b2f565b9550506040611be089828a01611b2f565b9450506060611bf189828a01611b59565b9350506080611c0289828a01611a54565b92505060a0611c1389828a01611a54565b9150509295509295509295565b600060208284031215611c3257600080fd5b600082013567ffffffffffffffff811115611c4c57600080fd5b611c5884828501611a69565b91505092915050565b600060c08284031215611c7357600080fd5b6000611c8184828501611a93565b91505092915050565b600060208284031215611c9c57600080fd5b6000611caa84828501611b44565b91505092915050565b60008060408385031215611cc657600080fd5b6000611cd485828601611b44565b9250506020611ce585828601611b44565b9150509250929050565b600080600080600060a08688031215611d0757600080fd5b6000611d1588828901611b2f565b9550506020611d2688828901611b2f565b9450506040611d3788828901611b2f565b9350506060611d4888828901611b2f565b9250506080611d5988828901611b2f565b9150509295509295909350565b611d6f81612521565b82525050565b611d7e81612533565b82525050565b611d95611d9082612533565b61260b565b82525050565b6000611da6826123da565b611db081856123f0565b9350611dc08185602086016125a7565b80840191505092915050565b611dd581612574565b82525050565b611de481612586565b82525050565b6000611df5826123e5565b611dff81856123fb565b9350611e0f8185602086016125a7565b611e18816126a2565b840191505092915050565b6000611e30600c836123fb565b9150611e3b826126b3565b602082019050919050565b6000611e536026836123fb565b9150611e5e826126dc565b604082019050919050565b6000611e766014836123fb565b9150611e818261272b565b602082019050919050565b6000611e996028836123fb565b9150611ea482612754565b604082019050919050565b6000611ebc601f836123fb565b9150611ec7826127a3565b602082019050919050565b6000611edf6015836123fb565b9150611eea826127cc565b602082019050919050565b6000611f02602e836123fb565b9150611f0d826127f5565b604082019050919050565b6000611f25601b836123fb565b9150611f3082612844565b602082019050919050565b6000611f486020836123fb565b9150611f538261286d565b602082019050919050565b6000611f6b6019836123fb565b9150611f7682612896565b602082019050919050565b6000611f8e602b836123fb565b9150611f99826128bf565b604082019050919050565b611fad8161255d565b82525050565b611fbc81612567565b82525050565b6000611fce8285611d9b565b9150611fda8284611d84565b6020820191508190509392505050565b6000602082019050611fff6000830184611d66565b92915050565b600060408201905061201a6000830185611d66565b818103602083015261202c8184611dea565b90509392505050565b600060808201905061204a6000830187611d75565b6120576020830186611fb3565b6120646040830185611d75565b6120716060830184611d75565b95945050505050565b600060608201905061208f6000830186611dcc565b61209c6020830185611fa4565b6120a96040830184611fa4565b949350505050565b60006020820190506120c66000830184611ddb565b92915050565b600060208201905081810360008301526120e581611e23565b9050919050565b6000602082019050818103600083015261210581611e46565b9050919050565b6000602082019050818103600083015261212581611e69565b9050919050565b6000602082019050818103600083015261214581611e8c565b9050919050565b6000602082019050818103600083015261216581611eaf565b9050919050565b6000602082019050818103600083015261218581611ed2565b9050919050565b600060208201905081810360008301526121a581611ef5565b9050919050565b600060208201905081810360008301526121c581611f18565b9050919050565b600060208201905081810360008301526121e581611f3b565b9050919050565b6000602082019050818103600083015261220581611f5e565b9050919050565b6000602082019050818103600083015261222581611f81565b9050919050565b60006020820190506122416000830184611fa4565b92915050565b600060608201905061225c6000830186611fa4565b6122696020830185611d66565b6122766040830184611fa4565b949350505050565b60006080820190506122936000830187611fa4565b6122a06020830186611d66565b6122ad6040830185611fa4565b6122ba6060830184611fa4565b95945050505050565b60006040820190506122d86000830185611fa4565b6122e56020830184611fa4565b9392505050565b60006060820190506123016000830186611fa4565b61230e6020830185611fa4565b61231b6040830184611fa4565b949350505050565b600060c0820190506123386000830189611fa4565b6123456020830188611fa4565b6123526040830187611fa4565b61235f6060830186611fa4565b61236c6080830185611fa4565b61237960a0830184611fa4565b979650505050505050565b600061238e61239f565b905061239a82826125da565b919050565b6000604051905090565b600067ffffffffffffffff8211156123c4576123c3612673565b5b6123cd826126a2565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006124178261255d565b91506124228361255d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561245757612456612615565b5b828201905092915050565b600061246d8261255d565b91506124788361255d565b92508261248857612487612644565b5b828204905092915050565b600061249e8261255d565b91506124a98361255d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124e2576124e1612615565b5b828202905092915050565b60006124f88261255d565b91506125038361255d565b92508282101561251657612515612615565b5b828203905092915050565b600061252c8261253d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061257f8261255d565b9050919050565b600061259182612567565b9050919050565b82818337600083830152505050565b60005b838110156125c55780820151818401526020810190506125aa565b838111156125d4576000848401525b50505050565b6125e3826126a2565b810181811067ffffffffffffffff8211171561260257612601612673565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f77726f6e67207369676e65720000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f7061796c6f616420776173206d6f646966696564000000000000000000000000600082015250565b7f4e6f7420656e6f75676820737465707320617661696c61626c6520746f206d6f60008201527f7665207468657265000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f756768742f746f6f206d7563682065746865722073656e7400600082015250565b7f796f7520616c7265616479207369676e65642075700000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f6c617374207175657269656420646f6573206e6f74206d617463680000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f796f75206e65656420746f206265207265676973746572656400000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b61291781612521565b811461292257600080fd5b50565b61292e81612533565b811461293957600080fd5b50565b6129458161255d565b811461295057600080fd5b50565b61295c81612567565b811461296757600080fd5b5056fea26469706673582212200eca451ee87adeb556978c4198e6c12611ff68221bac4b6c74f1abeb2c7ef6c264736f6c63430008040033";

type PlayersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PlayersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Players__factory extends ContractFactory {
  constructor(...args: PlayersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Players> {
    return super.deploy(overrides || {}) as Promise<Players>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Players {
    return super.attach(address) as Players;
  }
  override connect(signer: Signer): Players__factory {
    return super.connect(signer) as Players__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlayersInterface {
    return new utils.Interface(_abi) as PlayersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Players {
    return new Contract(address, _abi, signerOrProvider) as Players;
  }
}
