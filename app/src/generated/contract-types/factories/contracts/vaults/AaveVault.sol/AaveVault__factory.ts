/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveVault,
  AaveVaultInterface,
} from "../../../../contracts/vaults/AaveVault.sol/AaveVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "amountDeposited",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEmergency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114e0806100206000396000f3fe6080604052600436106100955760003560e01c8063b69ef8a811610059578063b69ef8a81461014b578063d0e30db014610176578063f2fde38b14610180578063f86ccd41146101a9578063f8c8765e146101d45761009c565b8063285939841461009e5780634146a073146100c957806351cff8d9146100e0578063715018a6146101095780638da5cb5b146101205761009c565b3661009c57005b005b3480156100aa57600080fd5b506100b36101fd565b6040516100c091906111ba565b60405180910390f35b3480156100d557600080fd5b506100de61031f565b005b3480156100ec57600080fd5b5061010760048036038101906101029190610e84565b610478565b005b34801561011557600080fd5b5061011e6105e5565b005b34801561012c57600080fd5b5061013561066d565b604051610142919061104d565b60405180910390f35b34801561015757600080fd5b50610160610697565b60405161016d91906111ba565b60405180910390f35b61017e610749565b005b34801561018c57600080fd5b506101a760048036038101906101a29190610e84565b61086f565b005b3480156101b557600080fd5b506101be610967565b6040516101cb91906111ba565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190610ead565b61096d565b005b6000609b543073ffffffffffffffffffffffffffffffffffffffff1663b69ef8a86040518163ffffffff1660e01b815260040160206040518083038186803b15801561024857600080fd5b505afa15801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610f39565b1161028e576000905061031c565b609b543073ffffffffffffffffffffffffffffffffffffffff1663b69ef8a86040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d757600080fd5b505afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190610f39565b610319919061123c565b90505b90565b610327610c03565b73ffffffffffffffffffffffffffffffffffffffff1661034561066d565b73ffffffffffffffffffffffffffffffffffffffff161461039b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103929061115a565b60405180910390fd5b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380500d20609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff336040518463ffffffff1660e01b815260040161043c939291906110c8565b600060405180830381600087803b15801561045657600080fd5b505af115801561046a573d6000803e3d6000fd5b505050506000609b81905550565b600260655414156104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b59061119a565b60405180910390fd5b6002606581905550609a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052057600080fd5b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380500d20609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166105896101fd565b846040518463ffffffff1660e01b81526004016105a8939291906110c8565b600060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b50505050600160658190555050565b6105ed610c03565b73ffffffffffffffffffffffffffffffffffffffff1661060b61066d565b73ffffffffffffffffffffffffffffffffffffffff1614610661576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106589061115a565b60405180910390fd5b61066b6000610c0b565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106f4919061104d565b60206040518083038186803b15801561070c57600080fd5b505afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190610f39565b905090565b6002606554141561078f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107869061119a565b60405180910390fd5b6002606581905550609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663474cf53d34609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060006040518563ffffffff1660e01b815260040161081a93929190611068565b6000604051808303818588803b15801561083357600080fd5b505af1158015610847573d6000803e3d6000fd5b505050505034609b600082825461085e91906111e6565b925050819055506001606581905550565b610877610c03565b73ffffffffffffffffffffffffffffffffffffffff1661089561066d565b73ffffffffffffffffffffffffffffffffffffffff16146108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e29061115a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561095b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109529061111a565b60405180910390fd5b61096481610c0b565b50565b609b5481565b60006109796001610cd1565b9050801561099d576001600060016101000a81548160ff0219169083151502179055505b84609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081609a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000609b81905550609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610b4892919061109f565b602060405180830381600087803b158015610b6257600080fd5b505af1158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a9190610f10565b50610ba3610dc1565b8015610bfc5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610bf391906110ff565b60405180910390a15b5050505050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060019054906101000a900460ff1615610d485760018260ff16148015610d005750610cfe30610e22565b155b610d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d369061113a565b60405180910390fd5b60009050610dbc565b8160ff1660008054906101000a900460ff1660ff1610610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d949061113a565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e079061117a565b60405180910390fd5b610e20610e1b610c03565b610c0b565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081359050610e5481611465565b92915050565b600081519050610e698161147c565b92915050565b600081519050610e7e81611493565b92915050565b600060208284031215610e9657600080fd5b6000610ea484828501610e45565b91505092915050565b60008060008060808587031215610ec357600080fd5b6000610ed187828801610e45565b9450506020610ee287828801610e45565b9350506040610ef387828801610e45565b9250506060610f0487828801610e45565b91505092959194509250565b600060208284031215610f2257600080fd5b6000610f3084828501610e5a565b91505092915050565b600060208284031215610f4b57600080fd5b6000610f5984828501610e6f565b91505092915050565b610f6b81611270565b82525050565b610f7a816112d3565b82525050565b610f89816112e5565b82525050565b6000610f9c6026836111d5565b9150610fa782611326565b604082019050919050565b6000610fbf602e836111d5565b9150610fca82611375565b604082019050919050565b6000610fe26020836111d5565b9150610fed826113c4565b602082019050919050565b6000611005602b836111d5565b9150611010826113ed565b604082019050919050565b6000611028601f836111d5565b91506110338261143c565b602082019050919050565b611047816112bc565b82525050565b60006020820190506110626000830184610f62565b92915050565b600060608201905061107d6000830186610f62565b61108a6020830185610f62565b6110976040830184610f71565b949350505050565b60006040820190506110b46000830185610f62565b6110c1602083018461103e565b9392505050565b60006060820190506110dd6000830186610f62565b6110ea602083018561103e565b6110f76040830184610f62565b949350505050565b60006020820190506111146000830184610f80565b92915050565b6000602082019050818103600083015261113381610f8f565b9050919050565b6000602082019050818103600083015261115381610fb2565b9050919050565b6000602082019050818103600083015261117381610fd5565b9050919050565b6000602082019050818103600083015261119381610ff8565b9050919050565b600060208201905081810360008301526111b38161101b565b9050919050565b60006020820190506111cf600083018461103e565b92915050565b600082825260208201905092915050565b60006111f1826112bc565b91506111fc836112bc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611231576112306112f7565b5b828201905092915050565b6000611247826112bc565b9150611252836112bc565b925082821015611265576112646112f7565b5b828203905092915050565b600061127b8261129c565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006112de8261128e565b9050919050565b60006112f0826112c6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61146e81611270565b811461147957600080fd5b50565b61148581611282565b811461149057600080fd5b50565b61149c816112bc565b81146114a757600080fd5b5056fea264697066735822122093ae5945f3e317b96a1edc223176ae4af9120b3b873c2f75a28ae7777c81b59a64736f6c63430008040033";

type AaveVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveVault__factory extends ContractFactory {
  constructor(...args: AaveVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveVault> {
    return super.deploy(overrides || {}) as Promise<AaveVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AaveVault {
    return super.attach(address) as AaveVault;
  }
  override connect(signer: Signer): AaveVault__factory {
    return super.connect(signer) as AaveVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveVaultInterface {
    return new utils.Interface(_abi) as AaveVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveVault {
    return new Contract(address, _abi, signerOrProvider) as AaveVault;
  }
}
