/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAaveGateway,
  IAaveGatewayInterface,
} from "../../../contracts/interfaces/IAaveGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_referralCode",
        type: "uint16",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAaveGateway__factory {
  static readonly abi = _abi;
  static createInterface(): IAaveGatewayInterface {
    return new utils.Interface(_abi) as IAaveGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAaveGateway {
    return new Contract(address, _abi, signerOrProvider) as IAaveGateway;
  }
}
