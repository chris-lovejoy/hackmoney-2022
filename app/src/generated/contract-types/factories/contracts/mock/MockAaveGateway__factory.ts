/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockAaveGateway,
  MockAaveGatewayInterface,
} from "../../../contracts/mock/MockAaveGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_referralCode",
        type: "uint16",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061021f806100206000396000f3fe6080604052600436106100295760003560e01c8063474cf53d1461002e57806380500d201461004a575b600080fd5b610048600480360381019061004391906100bc565b610073565b005b34801561005657600080fd5b50610071600480360381019061006c919061010b565b610078565b005b505050565b505050565b60008135905061008c816101a4565b92915050565b6000813590506100a1816101bb565b92915050565b6000813590506100b6816101d2565b92915050565b6000806000606084860312156100d157600080fd5b60006100df8682870161007d565b93505060206100f08682870161007d565b925050604061010186828701610092565b9150509250925092565b60008060006060848603121561012057600080fd5b600061012e8682870161007d565b935050602061013f868287016100a7565b92505060406101508682870161007d565b9150509250925092565b60006101658261017a565b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101ad8161015a565b81146101b857600080fd5b50565b6101c48161016c565b81146101cf57600080fd5b50565b6101db8161019a565b81146101e657600080fd5b5056fea264697066735822122079ccc0b57a459600c077ccb4a77a212e8c823ceeb6c23d2d052cb715e2fcde1c64736f6c63430008040033";

type MockAaveGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockAaveGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAaveGateway__factory extends ContractFactory {
  constructor(...args: MockAaveGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockAaveGateway> {
    return super.deploy(overrides || {}) as Promise<MockAaveGateway>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockAaveGateway {
    return super.attach(address) as MockAaveGateway;
  }
  override connect(signer: Signer): MockAaveGateway__factory {
    return super.connect(signer) as MockAaveGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAaveGatewayInterface {
    return new utils.Interface(_abi) as MockAaveGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockAaveGateway {
    return new Contract(address, _abi, signerOrProvider) as MockAaveGateway;
  }
}
