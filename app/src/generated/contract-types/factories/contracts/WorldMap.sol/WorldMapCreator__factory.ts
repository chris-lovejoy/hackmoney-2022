/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WorldMapCreator,
  WorldMapCreatorInterface,
} from "../../../contracts/WorldMap.sol/WorldMapCreator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_worldIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_breadth",
        type: "uint256",
      },
    ],
    name: "defineWorldMap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_selectedWorldIndex",
        type: "uint256",
      },
    ],
    name: "deleteWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "existingWorlds",
    outputs: [
      {
        internalType: "uint256",
        name: "worldIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Breadth",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_planetId",
        type: "uint256",
      },
    ],
    name: "getPlanet",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "planetID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "worldMapIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "planetType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructs.Planet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_worldId",
        type: "uint256",
      },
    ],
    name: "getPlanets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "planetID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "worldMapIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "planetType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructs.Planet[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_selectedWorldIndex",
        type: "uint256",
      },
    ],
    name: "getWorldMap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "worldIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Length",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Breadth",
            type: "uint256",
          },
        ],
        internalType: "struct WorldMapCreator.WorldMap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_worldMapIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_xCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_planetType",
        type: "uint256",
      },
    ],
    name: "manualCreatePlanet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "planetIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "planetsInWorld",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d6100226100a360201b60201c565b6100ab60201b60201c565b60006003819055506040516100419061016f565b604051809103906000f08015801561005d573d6000803e3d6000fd5b50600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061017d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610969806200171983390190565b61158c806200018d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638a36781e116100715780638a36781e146101795780638da5cb5b146101a9578063a2b870db146101c7578063a3f38e9b146101f9578063e2c7eb0514610229578063f2fde38b14610259576100b4565b806334efcb8e146100b957806342c3159c146100e9578063450509a21461010557806348d62059146101215780636886c12614610151578063715018a61461016f575b600080fd5b6100d360048036038101906100ce9190610d38565b610275565b6040516100e09190611173565b60405180910390f35b61010360048036038101906100fe9190610d38565b61032f565b005b61011f600480360381019061011a9190610d9d565b6103dc565b005b61013b60048036038101906101369190610d38565b610511565b604051610148919061118e565b60405180910390f35b61015961055c565b60405161016691906111a9565b60405180910390f35b610177610562565b005b610193600480360381019061018e9190610d61565b6105ea565b6040516101a091906111a9565b60405180910390f35b6101b161061b565b6040516101be91906110b6565b60405180910390f35b6101e160048036038101906101dc9190610d38565b610644565b6040516101f0939291906111c4565b60405180910390f35b610213600480360381019061020e9190610d38565b61066e565b60405161022091906110d1565b60405180910390f35b610243600480360381019061023e9190610dec565b61081f565b60405161025091906111a9565b60405180910390f35b610273600480360381019061026e9190610ce6565b6109f0565b005b61027d610bb4565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166334efcb8e836040518263ffffffff1660e01b81526004016102d891906111a9565b60c06040518083038186803b1580156102f057600080fd5b505afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103289190610d0f565b9050919050565b610337610ae8565b73ffffffffffffffffffffffffffffffffffffffff1661035561061b565b73ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a290611133565b60405180910390fd5b6001600082815260200190815260200160002060008082016000905560018201600090556002820160009055505050565b6103e4610ae8565b73ffffffffffffffffffffffffffffffffffffffff1661040261061b565b73ffffffffffffffffffffffffffffffffffffffff1614610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f90611133565b60405180910390fd5b60006001600085815260200190815260200160002060010154146104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890611153565b60405180910390fd5b6104b9610bea565b6040518060600160405280858152602001848152602001838152509050806001600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505050505050565b610519610bea565b6001600083815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050919050565b60035481565b61056a610ae8565b73ffffffffffffffffffffffffffffffffffffffff1661058861061b565b73ffffffffffffffffffffffffffffffffffffffff16146105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611133565b60405180910390fd5b6105e86000610af0565b565b6002602052816000526040600020818154811061060657600080fd5b90600052602060002001600091509150505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b60606000600160035461068191906112bd565b905060008167ffffffffffffffff8111156106c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156106fe57816020015b6106eb610bb4565b8152602001906001900390816106e35790505b50905060005b82811015610814576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166334efcb8e836040518263ffffffff1660e01b815260040161076991906111a9565b60c06040518083038186803b15801561078157600080fd5b505afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610d0f565b9050808383815181106107f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525050808061080c90611380565b915050610704565b508092505050919050565b6000610829610ae8565b73ffffffffffffffffffffffffffffffffffffffff1661084761061b565b73ffffffffffffffffffffffffffffffffffffffff161461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611133565b60405180910390fd5b60006001600087815260200190815260200160002060010154116108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed906110f3565b60405180910390fd5b60016003600082825461090991906112bd565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663040af1ba600354878787876040518663ffffffff1660e01b81526004016109759594939291906111fb565b600060405180830381600087803b15801561098f57600080fd5b505af11580156109a3573d6000803e3d6000fd5b505050506002600086815260200190815260200160002060035490806001815401808255809150506001900390600052602060002001600090919091909150556003549050949350505050565b6109f8610ae8565b73ffffffffffffffffffffffffffffffffffffffff16610a1661061b565b73ffffffffffffffffffffffffffffffffffffffff1614610a6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6390611133565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad390611113565b60405180910390fd5b610ae581610af0565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b600081359050610c1a81611528565b92915050565b600060c08284031215610c3257600080fd5b610c3c60c061124e565b90506000610c4c84828501610cd1565b6000830152506020610c6084828501610cd1565b6020830152506040610c7484828501610cd1565b6040830152506060610c8884828501610cd1565b6060830152506080610c9c84828501610cd1565b60808301525060a0610cb084828501610cd1565b60a08301525092915050565b600081359050610ccb8161153f565b92915050565b600081519050610ce08161153f565b92915050565b600060208284031215610cf857600080fd5b6000610d0684828501610c0b565b91505092915050565b600060c08284031215610d2157600080fd5b6000610d2f84828501610c20565b91505092915050565b600060208284031215610d4a57600080fd5b6000610d5884828501610cbc565b91505092915050565b60008060408385031215610d7457600080fd5b6000610d8285828601610cbc565b9250506020610d9385828601610cbc565b9150509250929050565b600080600060608486031215610db257600080fd5b6000610dc086828701610cbc565b9350506020610dd186828701610cbc565b9250506040610de286828701610cbc565b9150509250925092565b60008060008060808587031215610e0257600080fd5b6000610e1087828801610cbc565b9450506020610e2187828801610cbc565b9350506040610e3287828801610cbc565b9250506060610e4387828801610cbc565b91505092959194509250565b6000610e5b8383610f60565b60c08301905092915050565b610e7081611313565b82525050565b6000610e8182611283565b610e8b818561129b565b9350610e9683611273565b8060005b83811015610ec7578151610eae8882610e4f565b9750610eb98361128e565b925050600181019050610e9a565b5085935050505092915050565b6000610ee16014836112ac565b9150610eec82611438565b602082019050919050565b6000610f046026836112ac565b9150610f0f82611461565b604082019050919050565b6000610f276020836112ac565b9150610f32826114b0565b602082019050919050565b6000610f4a6025836112ac565b9150610f55826114d9565b604082019050919050565b60c082016000820151610f766000850182611098565b506020820151610f896020850182611098565b506040820151610f9c6040850182611098565b506060820151610faf6060850182611098565b506080820151610fc26080850182611098565b5060a0820151610fd560a0850182611098565b50505050565b60c082016000820151610ff16000850182611098565b5060208201516110046020850182611098565b5060408201516110176040850182611098565b50606082015161102a6060850182611098565b50608082015161103d6080850182611098565b5060a082015161105060a0850182611098565b50505050565b60608201600082015161106c6000850182611098565b50602082015161107f6020850182611098565b5060408201516110926040850182611098565b50505050565b6110a181611345565b82525050565b6110b081611345565b82525050565b60006020820190506110cb6000830184610e67565b92915050565b600060208201905081810360008301526110eb8184610e76565b905092915050565b6000602082019050818103600083015261110c81610ed4565b9050919050565b6000602082019050818103600083015261112c81610ef7565b9050919050565b6000602082019050818103600083015261114c81610f1a565b9050919050565b6000602082019050818103600083015261116c81610f3d565b9050919050565b600060c0820190506111886000830184610fdb565b92915050565b60006060820190506111a36000830184611056565b92915050565b60006020820190506111be60008301846110a7565b92915050565b60006060820190506111d960008301866110a7565b6111e660208301856110a7565b6111f360408301846110a7565b949350505050565b600060a08201905061121060008301886110a7565b61121d60208301876110a7565b61122a60408301866110a7565b61123760608301856110a7565b61124460808301846110a7565b9695505050505050565b6000611258611269565b9050611264828261134f565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006112c882611345565b91506112d383611345565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611308576113076113c9565b5b828201905092915050565b600061131e82611325565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61135882611427565b810181811067ffffffffffffffff82111715611377576113766113f8565b5b80604052505050565b600061138b82611345565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113be576113bd6113c9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f776f726c6420646f6573206e6f74206578697374000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f576f726c6420616c72656164792063726561746564207769746820746861742060008201527f696e646578000000000000000000000000000000000000000000000000000000602082015250565b61153181611313565b811461153c57600080fd5b50565b61154881611345565b811461155357600080fd5b5056fea26469706673582212207904304dd5c190f7f0a96fb82cdefcb7b84543e2d825a3c01d243a45fdc9abd564736f6c63430008040033608060405234801561001057600080fd5b50610019610119565b6040518060600160405280600281526020016040518060400160405280600581526020017f796561726e00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280601a81526020017f68747470733a2f2f544f444f2d6164642d495046532d6c696e6b000000000000815250815250905060008190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190805190602001906100f392919061013a565b50604082015181600201908051906020019061011092919061013a565b5050505061023e565b60405180606001604052806000815260200160608152602001606081525090565b828054610146906101dd565b90600052602060002090601f01602090048101928261016857600085556101af565b82601f1061018157805160ff19168380011785556101af565b828001600101855582156101af579182015b828111156101ae578251825591602001919060010190610193565b5b5090506101bc91906101c0565b5090565b5b808211156101d95760008160009055506001016101c1565b5090565b600060028204905060018216806101f557607f821691505b602082108114156102095761020861020f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61071c8061024d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063040af1ba1461005157806334efcb8e1461006d578063cf4530b91461009d578063e08c264e146100d2575b600080fd5b61006b600480360381019061006691906103fa565b610104565b005b610087600480360381019061008291906103d1565b610197565b6040516100949190610543565b60405180910390f35b6100b760048036038101906100b291906103d1565b610200565b6040516100c9969594939291906105a3565b60405180910390f35b6100ec60048036038101906100e791906103d1565b61023c565b6040516100fb9392919061055e565b60405180910390f35b61010c610386565b6040518060c00160405280878152602001868152602001858152602001848152602001838152602001600081525090508060016000888152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050505050505050565b61019f610386565b600160008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b6000818154811061024c57600080fd5b90600052602060002090600302016000915090508060000154908060010180546102759061065d565b80601f01602080910402602001604051908101604052809291908181526020018280546102a19061065d565b80156102ee5780601f106102c3576101008083540402835291602001916102ee565b820191906000526020600020905b8154815290600101906020018083116102d157829003601f168201915b5050505050908060020180546103039061065d565b80601f016020809104026020016040519081016040528092919081815260200182805461032f9061065d565b801561037c5780601f106103515761010080835404028352916020019161037c565b820191906000526020600020905b81548152906001019060200180831161035f57829003601f168201915b5050505050905083565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000813590506103cb816106cf565b92915050565b6000602082840312156103e357600080fd5b60006103f1848285016103bc565b91505092915050565b600080600080600060a0868803121561041257600080fd5b6000610420888289016103bc565b9550506020610431888289016103bc565b9450506040610442888289016103bc565b9350506060610453888289016103bc565b9250506080610464888289016103bc565b9150509295509295909350565b600061047c82610604565b610486818561060f565b935061049681856020860161062a565b61049f816106be565b840191505092915050565b60c0820160008201516104c06000850182610525565b5060208201516104d36020850182610525565b5060408201516104e66040850182610525565b5060608201516104f96060850182610525565b50608082015161050c6080850182610525565b5060a082015161051f60a0850182610525565b50505050565b61052e81610620565b82525050565b61053d81610620565b82525050565b600060c08201905061055860008301846104aa565b92915050565b60006060820190506105736000830186610534565b81810360208301526105858185610471565b905081810360408301526105998184610471565b9050949350505050565b600060c0820190506105b86000830189610534565b6105c56020830188610534565b6105d26040830187610534565b6105df6060830186610534565b6105ec6080830185610534565b6105f960a0830184610534565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561064857808201518184015260208101905061062d565b83811115610657576000848401525b50505050565b6000600282049050600182168061067557607f821691505b602082108114156106895761068861068f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6106d881610620565b81146106e357600080fd5b5056fea26469706673582212200a965370a0f5e674ed729f24c9039525b56c8596cbaf2ced0d2121aea011f61c64736f6c63430008040033";

type WorldMapCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldMapCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldMapCreator__factory extends ContractFactory {
  constructor(...args: WorldMapCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WorldMapCreator> {
    return super.deploy(overrides || {}) as Promise<WorldMapCreator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WorldMapCreator {
    return super.attach(address) as WorldMapCreator;
  }
  override connect(signer: Signer): WorldMapCreator__factory {
    return super.connect(signer) as WorldMapCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldMapCreatorInterface {
    return new utils.Interface(_abi) as WorldMapCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldMapCreator {
    return new Contract(address, _abi, signerOrProvider) as WorldMapCreator;
  }
}
